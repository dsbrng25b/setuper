- name: "install tools"
  become: true
  pacman:
    name: "{{ item }}"
  with_items:
    - git
    - neovim
    - exfat-utils
    - openssh
    - pass
    - thunar
    - chromium
    - firefox
    - openconnect
    - cifs-utils
    - docker
    - vagrant
    - pkgconf
    - make
    - libvirt
    - qemu
    - go
    - xournal
    - maven
    - jdk10-openjdk
    - feh

- name: "configure git"
  copy:
    src: gitconfig
    dest: ~/.gitconfig

- name: "add home bin to path"
  become: true
  copy:
    src: home_bin.sh
    dest: /etc/profile.d/

- name: "configure vagrant"
  become: true
  copy:
    src: vagrant.sh
    dest: /etc/profile.d/

# TODO: run only when file exists
- name: "check vagrant plugins"
  include_vars:
    file: ~/.vagrant.d/plugins.json
    name: vagrant_plugins

- name: "install vagrant libvirt plugin"
  command: vagrant plugin install vagrant-libvirt
  when: 'not ( "vagrant-libvirt" in vagrant_plugins.installed )'

- name: "add user to libvirt group"
  become: true
  user:
    name: "{{ lookup('env','USER') }}"
    groups: libvirt
    append: true

- name: "enable and start libvirt"
  become: true
  systemd:
    name: libvirtd
    state: started
    enabled: true
    daemon_reload: yes

- name: "configure aliases"
  blockinfile:
    marker: "# {mark} ALIASES"
    dest: ~/.bashrc
    content: |
      alias vi=nvim

- name: "install base16 colors"
  git:
    repo: https://github.com/chriskempson/base16-shell.git
    dest: ~/.config/base16-shell

- name: "check helm version"
  command: "{{ tool_dir }}/helm version -c"
  ignore_errors: True
  register: helm_check

- name: "install helm {{ helm_version }}"
  shell: "curl -f -sS -L https://storage.googleapis.com/kubernetes-helm/helm-{{ helm_version }}-linux-amd64.tar.gz | tar --strip-components=1 -C {{ tool_dir }} -xzv linux-amd64/helm"
  args:
    warn: False
  when: not helm_check.rc == 0 or not helm_version in helm_check.stdout

- name: "check kubectl version"
  command: "{{ tool_dir }}/kubectl version --client"
  ignore_errors: True
  register: kubectl_check

- name: "install kubectl {{ kubectl_version }}"
  get_url:
    url: "https://storage.googleapis.com/kubernetes-release/release/{{ kubectl_version }}/bin/linux/amd64/kubectl"
    dest: "~/bin/kubectl"
    mode: 0755
  when: not kubectl_check.rc == 0 or not kubectl_version in kubectl_check.stdout

- name: "check minikube version"
  command: "{{ tool_dir }}/minikube version"
  ignore_errors: True
  register: minikube_check

- name: "install minikube {{ minikube_version }}"
  get_url:
    url: "https://github.com/kubernetes/minikube/releases/download/{{ minikube_version }}/minikube-linux-amd64"
    dest: "~/bin/minikube"
    mode: 0755
  when: not minikube_check.rc == 0 or not minikube_version in minikube_check.stdout

- name: "install minikube kvm2 driver"
  get_url:
    url: "https://github.com/kubernetes/minikube/releases/download/{{ minikube_version }}/docker-machine-driver-kvm2"
    dest: "~/bin/docker-machine-driver-kvm2"
    mode: 0755
  when: not minikube_check.rc == 0 or not minikube_version in minikube_check.stdout
